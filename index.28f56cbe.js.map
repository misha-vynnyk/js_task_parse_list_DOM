{"mappings":"ACEA,IAAM,EAAmB,SAAS,gBAAgB,CAAC,MAE7C,EAAc,SAAC,CAArB,EACE,OAAO,WAAW,EAAa,OAAO,CAAC,WAAY,IACrD,EAEM,EAAW,SAAC,CAAlB,EACE,IAAM,EAAY,MAAM,IAAI,CAAC,GAE7B,EAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAU,EAAY,EAAE,OAAO,CAAC,MAAM,EAG5C,OAAO,AAFS,EAAY,EAAE,OAAO,CAAC,MAAM,EAE3B,CACnB,GAEA,IAAM,EAAgB,CAAI,CAAC,EAAE,CAAC,UAAU,CAKxC,OAHA,EAAc,SAAS,CAAG,GAC1B,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA4B,OAAA,EAAc,WAAW,CAAC,E,GAE/C,CACT,EAWA,EAAS,GAKT,QAAQ,GAAG,CAbF,MAAM,IAAI,CAUY,EAAS,IAVd,GAAG,CAAC,SAAC,CAA7B,EAAuC,MAAA,CACrC,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAY,EAAK,OAAO,CAAC,MAAM,EACvC,IAAK,OAAO,EAAK,OAAO,CAAC,GAAG,CAC9B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar listFromDocument = document.querySelectorAll(\"li\");\nvar parseSalary = function(salaryString) {\n    return parseFloat(salaryString.replace(/[^0-9]+/g, \"\"));\n};\nvar sortList = function(list) {\n    var listArray = Array.from(list);\n    listArray.sort(function(a, b) {\n        var salaryA = parseSalary(a.dataset.salary);\n        var salaryB = parseSalary(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    var parentElement = list[0].parentNode;\n    parentElement.innerHTML = \"\";\n    listArray.forEach(function(item) {\n        return parentElement.appendChild(item);\n    });\n    return listArray;\n};\nvar getEmployees = function(list) {\n    return Array.from(list).map(function(item) {\n        return {\n            name: item.innerText,\n            position: item.dataset.position,\n            salary: parseSalary(item.dataset.salary),\n            age: Number(item.dataset.age)\n        };\n    });\n};\nsortList(listFromDocument);\nvar employees = getEmployees(sortList(listFromDocument));\n// eslint-disable-next-line no-console\nconsole.log(employees);\n\n//# sourceMappingURL=index.28f56cbe.js.map\n","'use strict';\n\nconst listFromDocument = document.querySelectorAll('li');\n\nconst parseSalary = (salaryString) => {\n  return parseFloat(salaryString.replace(/[^0-9]+/g, ''));\n};\n\nconst sortList = (list) => {\n  const listArray = Array.from(list);\n\n  listArray.sort((a, b) => {\n    const salaryA = parseSalary(a.dataset.salary);\n    const salaryB = parseSalary(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  const parentElement = list[0].parentNode;\n\n  parentElement.innerHTML = '';\n  listArray.forEach((item) => parentElement.appendChild(item));\n\n  return listArray;\n};\n\nconst getEmployees = (list) => {\n  return Array.from(list).map((item) => ({\n    name: item.innerText,\n    position: item.dataset.position,\n    salary: parseSalary(item.dataset.salary),\n    age: Number(item.dataset.age),\n  }));\n};\n\nsortList(listFromDocument);\n\nconst employees = getEmployees(sortList(listFromDocument));\n\n// eslint-disable-next-line no-console\nconsole.log(employees);\n"],"names":["listFromDocument","document","querySelectorAll","parseSalary","salaryString","parseFloat","replace","sortList","list","listArray","Array","from","sort","a","b","salaryA","dataset","salary","salaryB","parentElement","parentNode","innerHTML","forEach","item","appendChild","console","log","map","name","innerText","position","age","Number"],"version":3,"file":"index.28f56cbe.js.map"}